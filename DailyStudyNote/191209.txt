1강

unity만이 아닌 C#까지 배우는것은? : 근본적으로 내가원하는 게임을 만들수있다.  
unity만 배우는 것은 영어소설책을 베껴 그리는 느낌이다. > c#을 공부해야 이해하면서 내가원하는 기능을 unity에서 발휘할수있다.

visual studio는 옛날 단순히 메모장에서 코딩후 결과를 실행시켜야만 알수있던 수준에서 코드를 치자마자 결과나 내가 잘못한 부분, 내가 어떤일을 할수있는지, 사전외우듯이 공부를 하지않아도 작업할수있다.
> IDE프로그램을 지칭한다. 통합개발환경 > visualstudio는 IDE중의 하나이다.

프로그램을 하려면 어떤 단위로 묶어야한다.

프로젝트의 최종목적 : exe파일을 만드는것

2강

솔루션이란?

근래의 프로그램은 하나의 프로젝트로 이루어지지 않는다. ex) 와우.exe // 와우스킬에디터.exe // 와우맵에디터.exe //포토샵.exe ...

솔루션 : 이러한 여러의 프로젝트를 동시에 관리할수있게해줌 > 여러프로젝트를 하나의 이름안에서 관리할수있게해준다. 솔루션 내부에서 폴더를 만들어 프로젝트를 묶어서 관리할수있다.(실제폴더가생기진않음,프로그램안에서의 분류일뿐)

시작프로젝트는 솔루션이나 프로젝트관리에서 등록할수있다.

ctrl+f5 or f5 : 시작프로젝트의 현재소스를 exe, 실행시킨다. > 실행시 bin/debug 폴더에 exe파일이 생성된다 > 빌드라는 작업임

시작프로젝트설정

// : 프로그램에 영향을 끼치지 않는다. 보통 코드나 상황에 대해 설명할때 이용
// : 한줄주석
/* ... */ : 범위주석

현재 C#은 6.0까지 나왔지만, unity의 c#은 4.0까지만 지원한다.

문법 : 프로그램의 일부분, 미리 다 쳐져있는 남이쳐놓은 코드

코드 : 프로그램의 화면에 나오는 모든것을 처리하기위한 문장들

{} : 기능묶음의 시작과 끝
ex
system
{주인공이 걸어가는코드
 주인공이 밥먹는코드
 주인공이 말하는코드
}
 > 이것은 system이란것 안에 기능으로 묶여있다.(실제로 이렇게쓰진않는다. 예시일뿐

using : 다른사람들이 묶어둔 코드를 이용하는것
