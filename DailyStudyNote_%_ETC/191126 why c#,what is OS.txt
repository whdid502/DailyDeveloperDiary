2019/11/26
1. why c#
ex)자동자정비기술을배우자면 기본적인 정비기술을배운다
   유니티는 자동자정비기술이라면 c#은 기계공학
   유니티는 c#을 기반으로 돌아간다는 말 > 유니티는 툴,c#은 사용

   1)유니티는 언리얼엔진에 비해 범용성이 높고 쉽다, 유니티는 버기라면 언리얼엔진은 아우디
   2)유니티는 언리얼에 비해 한계성이있나??
   3)성능의 차이는 무의미하다. 중요한건 개발자의 역량
   4)공식툴을 보는데 익숙하면 언리얼이 익숙하지만 그게아니라면 유니티가 더 좋다
   5)언리얼은 블루프린트를 쓰는데 오히려 언어를 모르는 사람이라면 단점이 훨씬많다
       ㄴ(ex. 서버 백엔드를 짜는데도 c# 이 이용되는데 c#대신 블루프린트를 이용하면 불편함이 잇을수도잇다)
   6)에셋스토어 : 개발자용 앱스토어,구글플레이(유니티내부에잇음)
        ㄴ ex)슬스파같은 게임을 만들다햇을때 2d의 경우엔 일러스트 3d같은경우엔 모델등을 얻을수있다
              인개발이나 저자본개발엔 유용하지만, 규모가있거나 좀더 디테일한 장점을 살리고싶을경우에는
              디자이너를 고용한다,사운드같은 기타팩(리소스)도 판매함(언리얼은 마켓플레이스,유니티는 에셋스토어)
   7)고로, 성능은 언리얼이 우월한건 사실인지만, 중요한건 개발자의역량, 그리고 유니티는 훨씬 많이이용하므로
     리소스얻기가 유용

------------------------------
 * 사마리안스튜디오 ) 안드or 아이폰 앱을 만들수잇는 개발툴
 * 비쥬얼스튜디오) 윈도우 관련 개발툴

-------------------------------

2. what is os
○ 안드로이드 > 구글이 개발한 모바일 os (삼성,lg 등에서 쓰이는것)(부분적 오픈소스, 구글이 인수해 구글이 관리하지만 대부분 공개한다, 모바일의 표준)
○ 크롬os > 구글의 컴퓨터os(무료)
○ 리눅스 > 완전한 오픈소스 컴퓨터 os(리눅스의 역사 만화 봐볼것 > 대개의 서버,백엔드는 리눅스로돼잇다)
○ 유닉스 > 대부분의 os의 전신, 요즘은 잘 쓰이진 않는다 아예 안쓴다고 말할순없다. 유닉스와 맥안에서 살아감,어셈블리어로개발
○ 맥(맥os, oss) > 아이폰의 os,애플, 유닉스의 계보를 탐
○ 윈도우 > 마이크로소프트의 자체개발, 리눅스와 개별되잇음

○ 클래식 맥 os (윈도우처럼 애플자체의코드)> 맥 os x(클래식맥os와 아주많이다름, 넥스트스텝과연관)>  맥os
○ ios > 애플의 모바일 운용체제
○ 맥os > 애플의 컴퓨터 운용체제

-----------------------------------------

캐시 찾아보기
개발에서 소대문자는 다른언어

비트단위 0,1값
어셈블리어=기계어,a로시작
유닉스안에서 돌아가는 고급언어 b언어 > c언어 > c++ > c#
기계어에 가까우면 저급 사람쪽이면고급
(c드라이브 도 비슷한친구)

https,ssl >찾아보기 

git > 공동작업할때 조율해주는 툴,소스버전관리

bash,shell > 찾아보기

source > 내가 개발한 코드

예약어> 찾아보기

commit > 쉽게말해서 중간저장,(수동)

숙 > 