* 객체지향프로그래밍에서는 가장 먼저 해야할 일이 내가 무얼 만들고싶은지를 지정하는것
ex) rpg를 만들면 몬스터중 드래곤(클래스선언)을 만들고싶다.
class dragon
{
	int AT; < 맴버변수
	int HP; < 맴버변수
	void Damage() < 맴버함수 : 맴버변수로 다 표현할수없으므로 함수를씁니다.
	{
		HP = - 10;
	}
};

접근제한지정자를ㄹ 입력하지 않으면 디폴트로 private상태이다. > 이게 일반적인상태

class안에 있는 속성(맴버변수)들은 보통 외부에서 접근하지 못하는게 일반적으로 좋다.
> 만약 접근가능하다면, 의도하지 않은 일들이 쉽게 발생할 수 있다.

함수로 접근합니다. > 중단점을 걸어볼수있습니다. 값도 확인할수있습니다. 가장큰 핵심은 디버깅을 할수있다.

함수는 보통 선언과 내용으로 나뉩니다. 

void(리턴값) Func(이름 혹은 식별자) ()(인자값)
> Public void Func()
  {
  }

함수란 보통 클래스 외부와으 소통을 위해서 만든다. 

인자값은 개수는 신경안써도 될정도로 많이 넣어줄수있다.

외부의 값을 받아서 나의 객체가 내부의 상태를 변화시키기 위해서 함수를 선언하는 경우가 많습니다.

리턴값이란 객체가 자신의 상태를 외부에 알려주는 용도로 사용합니다. 외부에 알려야 하기때분에, 알려주는 순간 함수가 종료됨.

연산자는 함수와 비슷합니다.

연산자의 우선순위는 오른쪽에서 왼쪽이다.  산술연산자는 *,/,%가 먼저, 그다음이 +,- 이다. ()연산자는 연산자의 실행순서를 지정할 수 있다.

대입연산자 : 함수에서 리턴된 값이나, 혹은 연산이 된 값을 리터럴 값일때도 있다. 그값을 받을 수 있는 변수에 넣어줘라

산술연산자 : +,-,*,/,%(더하기,빼기,곱사기,나누기,나머지) > 산술연산을 할 수 있고, 주의해야할점은 나누기와 나머지는 0을 넣으면 안된다.(10/0은 수학적으론 불가능, 컴퓨터공학적으론 심각한 오류가난다.)

축약연산자 : result = result + 10; 을 result += 10;으로 줄여 쓰는것을 말한다. 이외에도 /=, *=등이 있다.

int는 정수형 만 리턴할수있다면, bool은 옳다와 그르다만 리턴할수있다. 참과 거짓이 상수화 된것이 true, false입니다.

비교연산자 : 논리형으로 리턴되는데 <,>,<=.>=,==,!=(큰가?,작은가?,크거나 같은가?,작거나같은가?,같은가?,다른가?) > 이걸 받을수 있는 자료형이 bool값이다.
> 이런식으로 참과 거짓을 통해서 추후에 배울 if같은 조건문에서 유용하게쓰입니다.

bool 논리 연산자 : 참과 거짓을 다시 연산하는 연산자이다. &&,||,^,!true&(and : 둘다true일때만 true가 리턴된다 연속되잇을때 하나라도 false이면 fasle이다.
,or : 하나라도 true가 있다면 true &&의 반대격, xor : 양 값이 다르다면 true, 같다면 false되는것, not : !true&면 false, !false&면 true로 리턴해줍니다.)

함수와 메모리

메모리란 사실 c#을 배워야하기 때문에 알아야 하는 것이 아닌, 프로그램의 근간이 되는 지식이기때문에 알아야 합니다.

모든 프로그램은 메모리를 지불해야 합니다. 메모리의 구조를 안다는 것은 코드의 동작원리를 아는것과 같습니다.

class > 객체를 만들엇다는 것은 메모리를 지불했다는 것입니다. 좀더 근본적으론 단 하나도 메모리를 지불하지 않고 성립하지 않는다는 것입니다.

우리가 만드는 프로그램은 코드, 데이터, 힙, 스택으로 이루어져있다.

코드의 영역에는 상수, 클래스 선언 그자체, 함수의 내용, 클래스된 내용 등등 즈다체 수정이 불가능합니다.

static : 메인함수, 함수의 시작이라고 정한 c#의 규칙, Main이라는 함수부터 시작한다. 

스택의 영역에는 실행되는 함수들이 들어가게됩니다. 스택에선 함수가 실행을 마치고 종료되면 스택에서 제거됩니다. 프로그램의 종류는 Main함수도 스택에서 제거됬음을 말합니다.
> 프로그램의 실행여부는 스택에 있는 Main함수의 실행여부에 달려있습니다. Main의 크기는 지역변서+aㄹ 계산되는데, 최소 지역변수를 다 포함할수 있는 크기를 포함합니다.

함수의 인자값은 지역변수이다. 인즉, 지역변수의 특징인 함수가 끝나면 사라진다를 가지고있다.