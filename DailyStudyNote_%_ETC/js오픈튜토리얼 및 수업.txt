whjs 
한번 출력되면 움직이지 않는 html로 이루어진 웹과 달리, js는 사용자와 상호작용하며 이루어진다.
웹 브라우저는 한번 화면에 출력되면 바꿀수 없지만 js를 사용하면 가능하다.

html위에서 js는 작동합니다.
body안 script 태그로 js를 시작할수있습니다. 
event는 웹브라우저에서 어떠한 사건이 발생함을 의미합니다. onclick, onchange등등이 이런 것에 해당합니다.약 10개에서 20개 가량 됩니다.
console은 웹브라우저 상에서 f12를 눌러 console창에서 즉석으로 js를 입력해 즉석으로 처리할수 있는 것입니다.
콘솔에서 실행시킨 js는 웹페이지를 대상으로 실행되게된다. 간단하지만, 나에게 적당한 js를 이용해서 직면한 문제를 효율적으로 해결할수 있습니다.

데이터의 종류란 굉장히 중요합니다, 이를 분류하고 관리하기 위함입니다. 그중 문자와 숫자에 대해 알아봅시다.
데이터타입(자료형)
6개의 데이터타입과 객체가 있습니다. string(문자열)과 number(숫자)에 대해 알아봅니다.
숫자의 데이터 타입에서 가장 중요한 것은 연산입니다. 산술연산자에는 사칙연산이 있습니다.
문자의 데이터 타입은 " 따옴표로 시작해서 끝납니다. ' 작은따옴표로 시작해서 끝날수 도 있습니다. 문자열을 처리할때 사용할 수 있는 명령어는 굉장히 많습니다. 검색을 사용하면 좋습니다,
따옴표로 둘러진 숫자는 문자열로 취급됩니다.
x=1;
y=2;
이라는 명령어에서 x,y는 변수 =는 대입연산자 라고 합니다.
js의중요한 기능 중 하나는 웹브라우저를 제어할 수 있는 것입니다.
이를 위해선 css의 가장 기초적이고 중요한 문법과, js로 제어할 태그를 선택할 방법을 알아야 합니다.
css의 가장 중요한 문법이란 id와 class를 말합니다. id 와 class 의 가장 큰 차이는 id는 식별하기 위한 선택자이므로 단 한번 사용하며 무언가를 타게팅하는 것 입니다. class는 좀더 포괄적이고 그룹핑 하기 위한 것입니다.
js의 선택자는 queryselector 등 종류가 많습니다. 검색을 해서 필요한걸 찾아 사용합니다.
조건문
하나의 흐름으로 가는 것이 아니라 조건에 따라서 다른 기능이 실행되는것, 매우중요합니다.
비교연산자 중 동등비교연산자 ===는 좌항의값과 우항의 값이 같은가 아닌가를 구분합니다.
같다면 true, 아니라면 false가 출력됩니다.이 true와 false를 묶어서 Boolean 이라고 합니다. 이는 number나 string같은 데이터타입중 하나입니다.
이 비교연산자에는 &lt;(=<)같은 부등호도 포함됩니다.
조건문 if는 if와 else로 실행합니다. if의 뒤의 괄호값에는 boolean데이터타입이 옵니다. 즉 , ture or false가 옵니다. 그리고true면 if의 항목이 실행되고 else는 무시됩니다. false는 그 반대입니다.
if는 boolean의 값에 따라서 실행의 순서를 바꿀수 있습니다.
리팩토링이란 중복되거나 불필요한 코드를 없애고 축약해나가는 과정을 말합니다. 이런 비효율적인 것을 제거함으로써 보다 아름다운 코드가 완성되어 갑니다.
this라는 키워드로 id지정이나 query선택자같은것을 효율적으로 없앨수 있습니다. target또한 같습니다.
반복문
배열 array 은 수많은 데이터타입을 연관된 데이터 타입으로 잘 정리해두는 일종의 수납상자 입니다.
배열은 대괄호[]로 시작하고 끝내며, 값과 값사이는 , 로 구분합니다.
반복문 loop는 반복하는 수많은 코드를 간단히 해결해줄 수 있습니다. 기본적인 문법은 while(){}입니다.()에는 true,false는 boolean이 들어갑니다.
true일때 반복적으로 실행되며 false이면 중단합니다.{}안에는 반복될 코드입니다.
변수를 지정해서 변수의 값을 순차적으로 증가시키게 한뒤 변수값을 boolean값에 넣어 순서를 제한할 수 있습니다.
변수값을 배열의 엘리먼트 수로 정하게 된다면 값의 변화에도 로직엔 수정없이 항상 수정된 값이 출력되게 할수 있습니다.
함수
함수 function은 마치 수납상자와 같습니다. 각 태그에 붙어잇는 수없이 긴 자바스크립트의 코드를 묶어 헤드에 function이라는 구문과 함께 묶어 놓을수 있습니다.
기능하는것은 그 전과 같아 보이지만 내부적으론 완전히 다른 효율성을 지니게 됩니다. 마치 css에서 class와 비슷합니다. 입력에는 parament매개변수와 arguement인자 가 있습니다.
출력에 관련된 것은 return입니다.코드를 함수로 묶을때 this와 self 를 주의해야 합니다.
객체
객체란 코드가 너무 길어졋을때, 그 코드를 정리하여 효율적으로 만들기 위한것이 함수라면, 그 함수조차 복잡해지고 길어졋을때 그것을 정리해줄수 있는 것이 객체입니다.
마치 디렉토리가 수많은 중복되는 파일의이름을 해결해 주듯이 객체또한 그러합니다.
객체는 {}중괄호로 만들 수 있습니다.
